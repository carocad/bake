locals {
  reports_dir = "cmd"
  main = split(" ", data.main.std_out)[0]
  binary = replace(local.main, ".go", ".bin")
  go_sources = "**/**/*.go"
  vet_report = "${local.reports_dir}/vet.txt"
  test_report = "${local.reports_dir}/test.txt"
  version_filename = "internal/version.go"
}

task "main" {
  description = "the default task to run"

  depends_on = [vet, compile, test]
}

task "compile" {
  creates = local.binary
  command  = "go build -o ${local.binary} ${local.main}"
  sources  = [local.go_sources]

  depends_on = [version, libraries]
}

task "vet" {
  command = "go vet ./... | tee ${local.vet_report}"
  creates = local.vet_report
  sources  = [local.go_sources]
}

task "test" {
  command = "go test -timeout 30s ./... | tee ${local.test_report}"
  creates = local.test_report
  sources  = [local.go_sources]

  depends_on = [libraries]
}

task version {
  creates = local.version_filename
  sources = [local.go_sources]
  command = <<COMMAND
  cat << EOF > ${local.version_filename}
// automatically generated by bake
package internal

const (
  Version  = "${data.version.std_out}"
  Revision = "${data.revision.std_out}"
  Branch = "${data.branch.std_out}"
)
EOF
COMMAND
}

task libraries {
  creates = "go.sum"
  sources = ["go.mod"]
  command = "go mod download"
}
